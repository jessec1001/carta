.node {
  /* Stretch the node out to fill whatever container it is inside. */
  z-index: 1;
  width: 100%;
  height: 100%;

  /* Make the the node appear to be a material element on the screen. */
  border-radius: var(--border-radius);
  background-color: var(--color-fill-element);
  box-shadow: var(--shadow);
}
.node.selected {
  /* When a node is selected, give it a slight outline. */
  box-shadow: 0px 0px 1px 1px var(--color-primary-select);
}
.node.loading {
  /* When a node is loading, center everything. */
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.header {
  /* Distribute items along the header. */
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;

  /* Set the height of the header. */
  height: 1.5em;

  padding: 0.25em;
  border-radius: var(--border-radius) var(--border-radius) 0px 0px;
  background-color: var(--color-fill-element-lowlight);
}
.body {
  padding: 0.25em 0em;
}

.field {
  display: flex;
  align-self: flex-start;
  align-items: center;

  margin: 0em 0em 0.25em 0em;
}
.field.input {
  flex-direction: row;
  padding-right: 0.5em;
}
.field.output {
  flex-direction: row-reverse;
  padding-left: 0.5em;
}
.fieldLabel {
  width: 20%;
  min-width: 6em;
  flex-shrink: 0;
}
.field.input .fieldLabel {
  text-align: left;
  padding-left: 0.5em;
}
.field.output .fieldLabel {
  text-align: right;
  padding-right: 0.5em;
}
.fieldPoint {
  --connector-border-size: 3px;
  --connector-point-size: 0.75rem;

  position: absolute;
  display: inline-block;
  flex-shrink: 0;
  cursor: pointer;

  width: var(--connector-point-size);
  height: var(--connector-point-size);
  border: var(--connector-border-size) solid var(--color-fill-body);
  border-radius: var(--connector-point-size);
  background-color: var(--color-stroke-normal);
}
.fieldPoint:hover {
  background-color: var(--color-primary);
}
.field.input .fieldPoint {
  margin-left: calc(-0.5 * var(--connector-point-size));
}
.field.output .fieldPoint {
  margin-right: calc(-0.5 * var(--connector-point-size));
}

.stripes {
  /* We want the stripes to to stretch across a box evenly. */
  display: flex;
  flex-direction: row;
  align-items: stretch;

  /* We give a fixed size to the stripes. */
  margin: 0.125em;
  width: 1em;
  height: 100%;

  /* Round it out to look consistent. */
  border-radius: var(--border-radius);
  overflow: hidden;
}
.stripe {
  /* Each strip should be the same size. */
  flex: 1;
}
